{"version":3,"file":"Database.js","names":["EventEmitter","getNextTickFunction","config","configure","_ref","initSqlJs","wasmFileBaseUrl","Database","_EventEmitter","_inherits","filename","mode","callback","_this","_classCallCheck","_callSuper","undefined","callCallbackAsynchronously","error","sqlJsWasmFileBaseUrl","window","SQL_JS_WASM_FILE_BASE_URL","isNodeJs","process","release","name","onError","emit","onSuccess","_possibleConstructorReturn","Error","length","initSqlJsPromise","Promise","resolve","then","_","reject","locateFile","concat","SQL","database","_createClass","key","value","close","option","loadExtension","path","interrupt","wait","serialize","func","parallelize","run","_this2","_len","arguments","args","Array","_key","_getRunArguments","getRunArguments","query","unboundCallback","parameters","statement","bind","isInsert","test","isUpdate","isDelete","getValue","results","exec","values","lastID","changes","all","_len2","_key2","_getRunArguments2","each","result","push","_len3","_key3","_getRunArguments3","get","_len4","_key4","_getRunArguments4","prepare","_len5","_key5","_getRunArguments5","default","nextTick","getEnvVars","env","shift","pop","_typeof"],"sources":["../source/Database.js"],"sourcesContent":["import EventEmitter from 'eventemitter3'\r\n\r\nimport getNextTickFunction from './getNextTickFunction.js'\r\n\r\nlet config = {}\r\n\r\nexport function configure({ initSqlJs, wasmFileBaseUrl }) {\r\n\tconfig.initSqlJs = initSqlJs\r\n\tconfig.wasmFileBaseUrl = wasmFileBaseUrl\r\n}\r\n\r\n// `sqlite3`'s `Database` interface:\r\n// https://github.com/TryGhost/node-sqlite3/blob/master/lib/sqlite3.d.ts\r\n//\r\n// Extends `EventEmitter` to mimick `sqlite3`'s `Database` behavior.\r\n// Only emits a few events:\r\n// * \"open\"\r\n// * \"close\"\r\n// * \"error\"\r\n// Doesn't emit events:\r\n// * \"trace\"\r\n// * \"profile\"\r\n// * \"change\"\r\n//\r\nexport default class Database extends EventEmitter {\r\n\t// `filename: string` is a path to the file in which the data will be stored. Example: \":memory:\".\r\n\t// `mode?: number` is an optional access mode: read-only, read-write, etc.\r\n\t// `callback?: function` gets called after the database is ready, or if there was an error.\r\n\tconstructor(filename, mode, callback) {\r\n\t\tsuper()\r\n\r\n\t\tif (typeof mode === 'function') {\r\n\t\t\tcallback = mode\r\n\t\t\tmode = undefined\r\n\t\t}\r\n\r\n\t\t// Since `sqlite3`'s `Database` is declared to be an `EventEmitter`,\r\n\t\t// developers will be (appropriately) using it as:\r\n\t\t//\r\n\t\t// const database = new Database(filename, callback)\r\n\t\t// database.on('eventName', eventHandler)\r\n\t\t//\r\n\t\t// And they'll be expecting the `callback` to always be fired after those `.on()` calls\r\n\t\t// and never before them.\r\n\t\t// If the `callback` was called here as is, i.e. as simply `callback()`,\r\n\t\t// it would've been called before those `.on()` event listeners have been set up\r\n\t\t// resulting in a potential loss of some of the events.\r\n\t\t//\r\n\t\t// So the name of this function signals that `callback()` should always be called\r\n\t\t// \"asynchronously\" rather than \"synchronously\".\r\n\t\t//\r\n\t\tconst callCallbackAsynchronously = (error) => {\r\n\t\t\t// `process.nextTick()` workaround is not used in this code, the reasons being:\r\n\t\t\t// * It only works on server side.\r\n\t\t\t// * The `initSqlJs()` function already introduces an \"asynchronicity\" of its own.\r\n\t\t\tcallback(error)\r\n\t\t}\r\n\r\n\t\t// \"By default, sql.js uses wasm, and thus needs to load a `.wasm` file\r\n\t\t//  in addition to the javascript library. You can find this file in\r\n\t\t//  `./node_modules/sql.js/dist/sql-wasm.wasm` after installing sql.js from npm,\r\n\t\t//  and instruct your bundler to add it to your static assets or load it from a CDN\".\r\n\t\t//\r\n\t\t// \"Then use the locateFile property of the configuration object passed to\r\n\t\t//  `initSqlJs` to indicate where the file is. If you use an asset builder\r\n\t\t//  such as webpack, you can automate this\".\r\n\t\t//\r\n\t\t// \"Required to load the wasm binary asynchronously.\r\n\t\t//  Of course, you can host it wherever you want\".\r\n\t\t//\r\n\t\t// A client application could define the \"base\" URL of a WASM file either way:\r\n\t\t// * By calling `.config()` static function with a `wasmFileBaseUrl` parameter.\r\n\t\t// * By setting `window.SQL_JS_WASM_FILE_BASE_URL` global variable.\r\n\t\t//\r\n\t\tconst sqlJsWasmFileBaseUrl = config.wasmFileBaseUrl || (typeof window !== 'undefined' ? window.SQL_JS_WASM_FILE_BASE_URL : undefined)\r\n\r\n\t\tconst isNodeJs = (typeof process !== 'undefined') && (process.release.name === 'node')\r\n\r\n\t\tconst onError = (error) => {\r\n\t\t\tif (callback) {\r\n\t\t\t\t// Call the `callback`.\r\n\t\t\t\tcallCallbackAsynchronously(error)\r\n\t\t\t} else {\r\n\t\t\t\t// \"If no `callback` is provided and an error occurred,\r\n\t\t\t\t// an `error` event with the error object as the only parameter\r\n\t\t\t\t// will be emitted\".\r\n\t\t\t\tthis.emit('error', error)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst onSuccess = () => {\r\n\t\t\t// \"If opening succeeded, an `open` event with no parameters is emitted,\r\n\t\t\t//  regardless of whether a `callback` was provided or not\".\r\n\t\t\tthis.emit('open')\r\n\t\t\t// Call the `callback`.\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(null)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!isNodeJs) {\r\n\t\t\tif (!sqlJsWasmFileBaseUrl) {\r\n\t\t\t\treturn onError(new Error('The base URL for `sql.js` `*.wasm` files is not configured'))\r\n\t\t\t}\r\n\t\t\tif (sqlJsWasmFileBaseUrl[sqlJsWasmFileBaseUrl.length - 1] !== '/') {\r\n\t\t\t\treturn onError(new Error('The base URL for `sql.js` `*.wasm` files must end with a \"/\"'))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst initSqlJsPromise = config.initSqlJs ? Promise.resolve(config.initSqlJs) : (\r\n\t\t\tisNodeJs ? import('sql.js').then(_ => _.default) : (\r\n\t\t\t\ttypeof window !== 'undefined' ? Promise.resolve(window.initSqlJs) : Promise.reject(new Error('`window` is not defined'))\r\n\t\t\t)\r\n\t\t)\r\n\r\n\t\tinitSqlJsPromise.then((initSqlJs) => {\r\n\t\t\tif (!initSqlJs) {\r\n\t\t\t\treturn onError(new Error('`sql.js` not found'))\r\n\t\t\t}\r\n\t\t\t// Initialize `sql.js` — fetch the \".wasm\" file and run it.\r\n\t\t\treturn initSqlJs({\r\n\t\t\t\t// \"You can omit `locateFile` when running in Node.js\".\r\n\t\t\t\t//\r\n\t\t\t\t// When `locateFile` parameter is not omitted in Node.js, it throws an error:\r\n\t\t\t\t// \"Error: ENOENT: no such file or directory, open 'https:\\sql.js.org\\dist\\sql-wasm.wasm'\".\r\n\t\t\t\t//\r\n\t\t\t\t// May be somehow related: https://github.com/sql-js/sql.js/issues/528\r\n\t\t\t\t//\r\n\t\t\t\tlocateFile: isNodeJs ? undefined : filename => `${sqlJsWasmFileBaseUrl}${filename}`\r\n\t\t\t}).then((SQL) => {\r\n\t\t\t\t// Create a database.\r\n\t\t\t\tthis.database = new SQL.Database()\r\n\t\t\t\tonSuccess()\r\n\t\t\t}, onError)\r\n\t\t}, onError)\r\n\t}\r\n\r\n\t// \"Closes the database.\r\n\t//  `callback` (optional): If provided, this function will be called when the database\r\n\t//  was closed successfully or when an error occurred. The first argument is an `error` object.\r\n\t//  When it is null, closing succeeded. If no `callback` is provided and an error occurred,\r\n\t//  an \"error\" event with the `error` object as the only parameter will be emitted on the database object.\r\n\t//  If closing succeeded, a \"close\" event with no parameters is emitted, regardless of whether\r\n\t//  a `callback` was provided or not.\r\n\tclose(callback) {\r\n\t\tthis.database.close()\r\n\t\tthis.emit('close')\r\n\t\tif (callback) {\r\n\t\t\tcallback(null)\r\n\t\t}\r\n\t}\r\n\r\n\t// \"Set a configuration option for the database. Valid options are:\r\n\t//  * Tracing & profiling\r\n\t//    * trace: provide a function callback as a value. Invoked when an SQL statement executes, with a rendering of the statement text.\r\n\t//    * profile: provide a function callback. Invoked every time an SQL statement executes.\r\n\t//  * busyTimeout: provide an integer as a value. Sets the busy timeout\".\r\n\tconfigure(option, value) {}\r\n\r\n\t// \"Loads a compiled SQLite extension into the database connection object\".\r\n\tloadExtension(path, callback) {\r\n\t\tthrow new Error('`loadExtension()` is not supported')\r\n\t}\r\n\r\n\t// \"Allows the user to interrupt long-running queries.\r\n\t//  Wrapper around `sqlite3_interrupt` and causes other data-fetching functions\r\n\t//  to be passed an `error` with `code = sqlite3.INTERRUPT`\".\r\n\tinterrupt() {\r\n\t\t// This method is not implemented because `sql.js` methods are \"synchronous\" (\"blocking\").\r\n\r\n\t\t// this.database.exec('select interrupt();')\r\n\t}\r\n\r\n\t// There're no docs on this method.\r\n\t// I guess it calls the `callback` after all queries have finished.\r\n\twait(callback) {\r\n\t\t// `sql.js` methods are \"synchronous\" (\"blocking\")\r\n\t\t// so the `wait()` method doesn't really make sense here.\r\n\t\t// It just calls the `callback`.\r\n\t\tif (callback) {\r\n\t\t\tcallback(null)\r\n\t\t}\r\n\t}\r\n\r\n\t// https://stackoverflow.com/questions/41949724/how-does-db-serialize-work-in-node-sqlite3\r\n\t// \"Each command inside the `serialize()`'s `func` function is guaranteed to finish executing\r\n\t//  before the next one starts\".\r\n\tserialize(func) {\r\n\t\tfunc()\r\n\t}\r\n\r\n\t// https://www.sqlitetutorial.net/sqlite-nodejs/statements-control-flow/\r\n\t// \"The `serialize()` method allows you to execute statements in serialized mode,\r\n\t//  while the `parallelize()` method executes the statements in parallel\".\r\n\tparallelize(func) {\r\n\t\tfunc()\r\n\t}\r\n\r\n\t// \"Runs the SQL query with the specified parameters and calls the `callback` afterwards.\r\n\t//  It does not retrieve any result data\".\r\n\trun(...args) {\r\n\t\tconst {\r\n\t\t\tquery,\r\n\t\t\tcallback: unboundCallback,\r\n\t\t\tparameters\r\n\t\t} = getRunArguments(args)\r\n\r\n\t\t// \"The context of the `callback` function (the `this` object inside the function)\r\n\t\t//  is the statement object\".\r\n\t\t//\r\n\t\t// \"If execution was successful, the this object will contain two properties named\r\n\t\t//  `lastID` and `changes` which contain the value of the last inserted row ID\r\n\t\t//  and the number of rows affected by this query respectively\".\r\n\t\t//\r\n\t\tconst statement = {}\r\n\r\n\t\tlet callback = unboundCallback\r\n\t\tif (callback) {\r\n\t\t\tcallback = callback.bind(statement)\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\t// Run the query.\r\n\t\t\tthis.database.run(query, parameters)\r\n\r\n\t\t\t// Just a simple \"lame\" SQL operation type detection.\r\n\t\t\tconst isInsert = /^\\s*insert\\s+/i.test(query)\r\n\t\t\tconst isUpdate = /^\\s*update\\s+/i.test(query)\r\n\t\t\tconst isDelete = /^\\s*delete\\s+/i.test(query)\r\n\r\n\t\t\t// Gets a value from the database.\r\n\t\t\tconst getValue = (query) => {\r\n\t\t\t\tconst results = this.database.exec(query + ';')\r\n\t\t\t\treturn results[0].values[0][0]\r\n\t\t\t}\r\n\r\n\t\t\tif (isInsert) {\r\n\t\t\t\t// The row ID of the most recent successful INSERT.\r\n\t\t\t\tstatement.lastID = getValue('select last_insert_rowid()')\r\n\t\t\t}\r\n\r\n\t\t\tif (isInsert || isUpdate || isDelete) {\r\n\t\t\t\t// The number of rows modified, inserted or deleted by the most recently completed\r\n\t\t\t\t// INSERT, UPDATE or DELETE statement.\r\n\t\t\t\tstatement.changes = getValue('select changes()')\r\n\t\t\t}\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, null)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, error)\r\n\t\t\t} else {\r\n\t\t\t\t// \"When no `callback` is provided and an error occurs,\r\n\t\t\t\t//  an \"error\" event will be emitted\".\r\n\t\t\t\tthis.emit('error', error)\r\n\t\t\t\t// throw error\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Returns `this` for method chaining.\r\n\t\treturn this\r\n\t}\r\n\r\n\t// \"Runs the SQL query with the specified parameters and calls the `callback`\r\n\t//  with all result rows afterwards\".\r\n\tall(...args) {\r\n\t\tconst {\r\n\t\t\tquery,\r\n\t\t\tcallback,\r\n\t\t\tparameters\r\n\t\t} = getRunArguments(args)\r\n\r\n\t\ttry {\r\n\t\t\tconst results = []\r\n\r\n\t\t\tthis.database.each(query, parameters,\r\n\t\t\t\t// When a query has produced a result (only for `SELECT` queries).\r\n\t\t\t\tfunction(result) {\r\n\t\t\t\t\tresults.push(result)\r\n\t\t\t\t},\r\n\t\t\t\t// When all queries have finished.\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallCallbackAsynchronously(callback, null, results)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t} catch (error) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, error)\r\n\t\t\t} else {\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Returns `this` for method chaining.\r\n\t\treturn this\r\n\t}\r\n\r\n\t// \"Runs the SQL query with the specified parameters and calls the `callback`\r\n\t//  once for each result row\".\r\n\teach(...args) {\r\n\t\tconst {\r\n\t\t\tquery,\r\n\t\t\tcallback,\r\n\t\t\tparameters\r\n\t\t} = getRunArguments(args)\r\n\r\n\t\ttry {\r\n\t\t\tconst results = []\r\n\t\t\tthis.database.each(query, parameters,\r\n\t\t\t\t// When a query has produced a result (only for `SELECT` queries).\r\n\t\t\t\tfunction(result) {\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallCallbackAsynchronously(callback, null, result)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t} catch (error) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, error)\r\n\t\t\t} else {\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Returns `this` for method chaining.\r\n\t\treturn this\r\n\t}\r\n\r\n\tget(...args) {\r\n\t\tconst {\r\n\t\t\tquery,\r\n\t\t\tcallback,\r\n\t\t\tparameters\r\n\t\t} = getRunArguments(args)\r\n\r\n\t\ttry {\r\n\t\t\tconst results = this.database.exec(query, parameters)\r\n\r\n\t\t\t// \"If the result set is empty, the second parameter is `undefined`,\r\n\t\t\t//  otherwise it is an object containing the values for the first row.\r\n\t\t\t//  The property `names` correspond to the column names of the result set\".\r\n\t\t\t//\r\n\t\t\t// I dunno if the `result` object is correct or not.\r\n\t\t\t// It's more of a \"placeholder\" implementation.\r\n\t\t\t//\r\n\t\t\tconst result = results[0]\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, null, result)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, error)\r\n\t\t\t} else {\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Returns `this` for method chaining.\r\n\t\treturn this\r\n\t}\r\n\r\n\t// \"Runs all SQL queries in the supplied string. No result rows are retrieved\".\r\n\texec(query, callback) {\r\n\t\ttry {\r\n\t\t\tthis.database.exec(query)\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, null)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, error)\r\n\t\t\t} else {\r\n\t\t\t\t// \"When no `callback` is provided and an error occurs,\r\n\t\t\t\t//  an \"error\" event will be emitted\".\r\n\t\t\t\tthis.emit('error', error)\r\n\t\t\t\t// throw error\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Returns `this` for method chaining.\r\n\t\treturn this\r\n\t}\r\n\r\n\t// \"Prepares the SQL statement and optionally binds the specified parameters\r\n\t//  and calls the callback when done. The function returns a Statement object.\"\r\n\tprepare(...args) {\r\n\t\tconst {\r\n\t\t\tquery,\r\n\t\t\tcallback,\r\n\t\t\tparameters\r\n\t\t} = getRunArguments(args)\r\n\r\n\t\tlet statement = {}\r\n\r\n\t\ttry {\r\n\t\t\tstatement = this.database.prepare(query, parameters)\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, null)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, error)\r\n\t\t\t} else {\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn statement\r\n\t}\r\n}\r\n\r\nconst nextTick = getNextTickFunction()\r\nfunction callCallbackAsynchronously(callback, error, result) {\r\n\tnextTick(() => callback(error, result))\r\n}\r\n\r\nfunction getEnvVars() {\r\n\tif (typeof process !== 'undefined') {\r\n\t\treturn process.env\r\n\t}\r\n}\r\n\r\nfunction getRunArguments(args) {\r\n\tconst query = args.shift()\r\n\tlet parameters\r\n\tlet callback\r\n\r\n\t// Sort out the arguments.\r\n\tif (args.length === 0) {\r\n\t\tparameters = []\r\n\t} else {\r\n\t\tif (typeof args[args.length - 1] === 'function') {\r\n\t\t\tcallback = args.pop()\r\n\t\t}\r\n\t\tparameters = args\r\n\t}\r\n\r\n\t// If parameters were passed as an object then convert them to an object.\r\n\tif (parameters.length === 1) {\r\n\t\tif (parameters[0] !== null && typeof parameters[0] === 'object') {\r\n\t\t\tparameters = parameters[0]\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tquery,\r\n\t\tparameters,\r\n\t\tcallback\r\n\t}\r\n}"],"mappings":"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"}