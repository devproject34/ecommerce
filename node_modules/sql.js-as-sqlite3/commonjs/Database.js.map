{"version":3,"file":"Database.js","names":["_eventemitter","_interopRequireDefault","require","_getNextTickFunction","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","apply","self","_assertThisInitialized","ReferenceError","Boolean","valueOf","setPrototypeOf","getPrototypeOf","bind","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","config","configure","_ref","initSqlJs","wasmFileBaseUrl","Database","exports","_EventEmitter","filename","mode","callback","_this","undefined","callCallbackAsynchronously","error","sqlJsWasmFileBaseUrl","window","SQL_JS_WASM_FILE_BASE_URL","isNodeJs","process","release","name","onError","emit","onSuccess","Error","initSqlJsPromise","Promise","resolve","then","_","reject","locateFile","concat","SQL","database","close","option","loadExtension","path","interrupt","wait","serialize","func","parallelize","run","_this2","_len","arguments","args","Array","_key","_getRunArguments","getRunArguments","query","unboundCallback","parameters","statement","isInsert","test","isUpdate","isDelete","getValue","results","exec","values","lastID","changes","all","_len2","_key2","_getRunArguments2","each","result","push","_len3","_key3","_getRunArguments3","_len4","_key4","_getRunArguments4","prepare","_len5","_key5","_getRunArguments5","EventEmitter","nextTick","getNextTickFunction","getEnvVars","env","shift","pop"],"sources":["../source/Database.js"],"sourcesContent":["import EventEmitter from 'eventemitter3'\r\n\r\nimport getNextTickFunction from './getNextTickFunction.js'\r\n\r\nlet config = {}\r\n\r\nexport function configure({ initSqlJs, wasmFileBaseUrl }) {\r\n\tconfig.initSqlJs = initSqlJs\r\n\tconfig.wasmFileBaseUrl = wasmFileBaseUrl\r\n}\r\n\r\n// `sqlite3`'s `Database` interface:\r\n// https://github.com/TryGhost/node-sqlite3/blob/master/lib/sqlite3.d.ts\r\n//\r\n// Extends `EventEmitter` to mimick `sqlite3`'s `Database` behavior.\r\n// Only emits a few events:\r\n// * \"open\"\r\n// * \"close\"\r\n// * \"error\"\r\n// Doesn't emit events:\r\n// * \"trace\"\r\n// * \"profile\"\r\n// * \"change\"\r\n//\r\nexport default class Database extends EventEmitter {\r\n\t// `filename: string` is a path to the file in which the data will be stored. Example: \":memory:\".\r\n\t// `mode?: number` is an optional access mode: read-only, read-write, etc.\r\n\t// `callback?: function` gets called after the database is ready, or if there was an error.\r\n\tconstructor(filename, mode, callback) {\r\n\t\tsuper()\r\n\r\n\t\tif (typeof mode === 'function') {\r\n\t\t\tcallback = mode\r\n\t\t\tmode = undefined\r\n\t\t}\r\n\r\n\t\t// Since `sqlite3`'s `Database` is declared to be an `EventEmitter`,\r\n\t\t// developers will be (appropriately) using it as:\r\n\t\t//\r\n\t\t// const database = new Database(filename, callback)\r\n\t\t// database.on('eventName', eventHandler)\r\n\t\t//\r\n\t\t// And they'll be expecting the `callback` to always be fired after those `.on()` calls\r\n\t\t// and never before them.\r\n\t\t// If the `callback` was called here as is, i.e. as simply `callback()`,\r\n\t\t// it would've been called before those `.on()` event listeners have been set up\r\n\t\t// resulting in a potential loss of some of the events.\r\n\t\t//\r\n\t\t// So the name of this function signals that `callback()` should always be called\r\n\t\t// \"asynchronously\" rather than \"synchronously\".\r\n\t\t//\r\n\t\tconst callCallbackAsynchronously = (error) => {\r\n\t\t\t// `process.nextTick()` workaround is not used in this code, the reasons being:\r\n\t\t\t// * It only works on server side.\r\n\t\t\t// * The `initSqlJs()` function already introduces an \"asynchronicity\" of its own.\r\n\t\t\tcallback(error)\r\n\t\t}\r\n\r\n\t\t// \"By default, sql.js uses wasm, and thus needs to load a `.wasm` file\r\n\t\t//  in addition to the javascript library. You can find this file in\r\n\t\t//  `./node_modules/sql.js/dist/sql-wasm.wasm` after installing sql.js from npm,\r\n\t\t//  and instruct your bundler to add it to your static assets or load it from a CDN\".\r\n\t\t//\r\n\t\t// \"Then use the locateFile property of the configuration object passed to\r\n\t\t//  `initSqlJs` to indicate where the file is. If you use an asset builder\r\n\t\t//  such as webpack, you can automate this\".\r\n\t\t//\r\n\t\t// \"Required to load the wasm binary asynchronously.\r\n\t\t//  Of course, you can host it wherever you want\".\r\n\t\t//\r\n\t\t// A client application could define the \"base\" URL of a WASM file either way:\r\n\t\t// * By calling `.config()` static function with a `wasmFileBaseUrl` parameter.\r\n\t\t// * By setting `window.SQL_JS_WASM_FILE_BASE_URL` global variable.\r\n\t\t//\r\n\t\tconst sqlJsWasmFileBaseUrl = config.wasmFileBaseUrl || (typeof window !== 'undefined' ? window.SQL_JS_WASM_FILE_BASE_URL : undefined)\r\n\r\n\t\tconst isNodeJs = (typeof process !== 'undefined') && (process.release.name === 'node')\r\n\r\n\t\tconst onError = (error) => {\r\n\t\t\tif (callback) {\r\n\t\t\t\t// Call the `callback`.\r\n\t\t\t\tcallCallbackAsynchronously(error)\r\n\t\t\t} else {\r\n\t\t\t\t// \"If no `callback` is provided and an error occurred,\r\n\t\t\t\t// an `error` event with the error object as the only parameter\r\n\t\t\t\t// will be emitted\".\r\n\t\t\t\tthis.emit('error', error)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst onSuccess = () => {\r\n\t\t\t// \"If opening succeeded, an `open` event with no parameters is emitted,\r\n\t\t\t//  regardless of whether a `callback` was provided or not\".\r\n\t\t\tthis.emit('open')\r\n\t\t\t// Call the `callback`.\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(null)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!isNodeJs) {\r\n\t\t\tif (!sqlJsWasmFileBaseUrl) {\r\n\t\t\t\treturn onError(new Error('The base URL for `sql.js` `*.wasm` files is not configured'))\r\n\t\t\t}\r\n\t\t\tif (sqlJsWasmFileBaseUrl[sqlJsWasmFileBaseUrl.length - 1] !== '/') {\r\n\t\t\t\treturn onError(new Error('The base URL for `sql.js` `*.wasm` files must end with a \"/\"'))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst initSqlJsPromise = config.initSqlJs ? Promise.resolve(config.initSqlJs) : (\r\n\t\t\tisNodeJs ? import('sql.js').then(_ => _.default) : (\r\n\t\t\t\ttypeof window !== 'undefined' ? Promise.resolve(window.initSqlJs) : Promise.reject(new Error('`window` is not defined'))\r\n\t\t\t)\r\n\t\t)\r\n\r\n\t\tinitSqlJsPromise.then((initSqlJs) => {\r\n\t\t\tif (!initSqlJs) {\r\n\t\t\t\treturn onError(new Error('`sql.js` not found'))\r\n\t\t\t}\r\n\t\t\t// Initialize `sql.js` — fetch the \".wasm\" file and run it.\r\n\t\t\treturn initSqlJs({\r\n\t\t\t\t// \"You can omit `locateFile` when running in Node.js\".\r\n\t\t\t\t//\r\n\t\t\t\t// When `locateFile` parameter is not omitted in Node.js, it throws an error:\r\n\t\t\t\t// \"Error: ENOENT: no such file or directory, open 'https:\\sql.js.org\\dist\\sql-wasm.wasm'\".\r\n\t\t\t\t//\r\n\t\t\t\t// May be somehow related: https://github.com/sql-js/sql.js/issues/528\r\n\t\t\t\t//\r\n\t\t\t\tlocateFile: isNodeJs ? undefined : filename => `${sqlJsWasmFileBaseUrl}${filename}`\r\n\t\t\t}).then((SQL) => {\r\n\t\t\t\t// Create a database.\r\n\t\t\t\tthis.database = new SQL.Database()\r\n\t\t\t\tonSuccess()\r\n\t\t\t}, onError)\r\n\t\t}, onError)\r\n\t}\r\n\r\n\t// \"Closes the database.\r\n\t//  `callback` (optional): If provided, this function will be called when the database\r\n\t//  was closed successfully or when an error occurred. The first argument is an `error` object.\r\n\t//  When it is null, closing succeeded. If no `callback` is provided and an error occurred,\r\n\t//  an \"error\" event with the `error` object as the only parameter will be emitted on the database object.\r\n\t//  If closing succeeded, a \"close\" event with no parameters is emitted, regardless of whether\r\n\t//  a `callback` was provided or not.\r\n\tclose(callback) {\r\n\t\tthis.database.close()\r\n\t\tthis.emit('close')\r\n\t\tif (callback) {\r\n\t\t\tcallback(null)\r\n\t\t}\r\n\t}\r\n\r\n\t// \"Set a configuration option for the database. Valid options are:\r\n\t//  * Tracing & profiling\r\n\t//    * trace: provide a function callback as a value. Invoked when an SQL statement executes, with a rendering of the statement text.\r\n\t//    * profile: provide a function callback. Invoked every time an SQL statement executes.\r\n\t//  * busyTimeout: provide an integer as a value. Sets the busy timeout\".\r\n\tconfigure(option, value) {}\r\n\r\n\t// \"Loads a compiled SQLite extension into the database connection object\".\r\n\tloadExtension(path, callback) {\r\n\t\tthrow new Error('`loadExtension()` is not supported')\r\n\t}\r\n\r\n\t// \"Allows the user to interrupt long-running queries.\r\n\t//  Wrapper around `sqlite3_interrupt` and causes other data-fetching functions\r\n\t//  to be passed an `error` with `code = sqlite3.INTERRUPT`\".\r\n\tinterrupt() {\r\n\t\t// This method is not implemented because `sql.js` methods are \"synchronous\" (\"blocking\").\r\n\r\n\t\t// this.database.exec('select interrupt();')\r\n\t}\r\n\r\n\t// There're no docs on this method.\r\n\t// I guess it calls the `callback` after all queries have finished.\r\n\twait(callback) {\r\n\t\t// `sql.js` methods are \"synchronous\" (\"blocking\")\r\n\t\t// so the `wait()` method doesn't really make sense here.\r\n\t\t// It just calls the `callback`.\r\n\t\tif (callback) {\r\n\t\t\tcallback(null)\r\n\t\t}\r\n\t}\r\n\r\n\t// https://stackoverflow.com/questions/41949724/how-does-db-serialize-work-in-node-sqlite3\r\n\t// \"Each command inside the `serialize()`'s `func` function is guaranteed to finish executing\r\n\t//  before the next one starts\".\r\n\tserialize(func) {\r\n\t\tfunc()\r\n\t}\r\n\r\n\t// https://www.sqlitetutorial.net/sqlite-nodejs/statements-control-flow/\r\n\t// \"The `serialize()` method allows you to execute statements in serialized mode,\r\n\t//  while the `parallelize()` method executes the statements in parallel\".\r\n\tparallelize(func) {\r\n\t\tfunc()\r\n\t}\r\n\r\n\t// \"Runs the SQL query with the specified parameters and calls the `callback` afterwards.\r\n\t//  It does not retrieve any result data\".\r\n\trun(...args) {\r\n\t\tconst {\r\n\t\t\tquery,\r\n\t\t\tcallback: unboundCallback,\r\n\t\t\tparameters\r\n\t\t} = getRunArguments(args)\r\n\r\n\t\t// \"The context of the `callback` function (the `this` object inside the function)\r\n\t\t//  is the statement object\".\r\n\t\t//\r\n\t\t// \"If execution was successful, the this object will contain two properties named\r\n\t\t//  `lastID` and `changes` which contain the value of the last inserted row ID\r\n\t\t//  and the number of rows affected by this query respectively\".\r\n\t\t//\r\n\t\tconst statement = {}\r\n\r\n\t\tlet callback = unboundCallback\r\n\t\tif (callback) {\r\n\t\t\tcallback = callback.bind(statement)\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\t// Run the query.\r\n\t\t\tthis.database.run(query, parameters)\r\n\r\n\t\t\t// Just a simple \"lame\" SQL operation type detection.\r\n\t\t\tconst isInsert = /^\\s*insert\\s+/i.test(query)\r\n\t\t\tconst isUpdate = /^\\s*update\\s+/i.test(query)\r\n\t\t\tconst isDelete = /^\\s*delete\\s+/i.test(query)\r\n\r\n\t\t\t// Gets a value from the database.\r\n\t\t\tconst getValue = (query) => {\r\n\t\t\t\tconst results = this.database.exec(query + ';')\r\n\t\t\t\treturn results[0].values[0][0]\r\n\t\t\t}\r\n\r\n\t\t\tif (isInsert) {\r\n\t\t\t\t// The row ID of the most recent successful INSERT.\r\n\t\t\t\tstatement.lastID = getValue('select last_insert_rowid()')\r\n\t\t\t}\r\n\r\n\t\t\tif (isInsert || isUpdate || isDelete) {\r\n\t\t\t\t// The number of rows modified, inserted or deleted by the most recently completed\r\n\t\t\t\t// INSERT, UPDATE or DELETE statement.\r\n\t\t\t\tstatement.changes = getValue('select changes()')\r\n\t\t\t}\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, null)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, error)\r\n\t\t\t} else {\r\n\t\t\t\t// \"When no `callback` is provided and an error occurs,\r\n\t\t\t\t//  an \"error\" event will be emitted\".\r\n\t\t\t\tthis.emit('error', error)\r\n\t\t\t\t// throw error\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Returns `this` for method chaining.\r\n\t\treturn this\r\n\t}\r\n\r\n\t// \"Runs the SQL query with the specified parameters and calls the `callback`\r\n\t//  with all result rows afterwards\".\r\n\tall(...args) {\r\n\t\tconst {\r\n\t\t\tquery,\r\n\t\t\tcallback,\r\n\t\t\tparameters\r\n\t\t} = getRunArguments(args)\r\n\r\n\t\ttry {\r\n\t\t\tconst results = []\r\n\r\n\t\t\tthis.database.each(query, parameters,\r\n\t\t\t\t// When a query has produced a result (only for `SELECT` queries).\r\n\t\t\t\tfunction(result) {\r\n\t\t\t\t\tresults.push(result)\r\n\t\t\t\t},\r\n\t\t\t\t// When all queries have finished.\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallCallbackAsynchronously(callback, null, results)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t} catch (error) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, error)\r\n\t\t\t} else {\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Returns `this` for method chaining.\r\n\t\treturn this\r\n\t}\r\n\r\n\t// \"Runs the SQL query with the specified parameters and calls the `callback`\r\n\t//  once for each result row\".\r\n\teach(...args) {\r\n\t\tconst {\r\n\t\t\tquery,\r\n\t\t\tcallback,\r\n\t\t\tparameters\r\n\t\t} = getRunArguments(args)\r\n\r\n\t\ttry {\r\n\t\t\tconst results = []\r\n\t\t\tthis.database.each(query, parameters,\r\n\t\t\t\t// When a query has produced a result (only for `SELECT` queries).\r\n\t\t\t\tfunction(result) {\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallCallbackAsynchronously(callback, null, result)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t} catch (error) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, error)\r\n\t\t\t} else {\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Returns `this` for method chaining.\r\n\t\treturn this\r\n\t}\r\n\r\n\tget(...args) {\r\n\t\tconst {\r\n\t\t\tquery,\r\n\t\t\tcallback,\r\n\t\t\tparameters\r\n\t\t} = getRunArguments(args)\r\n\r\n\t\ttry {\r\n\t\t\tconst results = this.database.exec(query, parameters)\r\n\r\n\t\t\t// \"If the result set is empty, the second parameter is `undefined`,\r\n\t\t\t//  otherwise it is an object containing the values for the first row.\r\n\t\t\t//  The property `names` correspond to the column names of the result set\".\r\n\t\t\t//\r\n\t\t\t// I dunno if the `result` object is correct or not.\r\n\t\t\t// It's more of a \"placeholder\" implementation.\r\n\t\t\t//\r\n\t\t\tconst result = results[0]\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, null, result)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, error)\r\n\t\t\t} else {\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Returns `this` for method chaining.\r\n\t\treturn this\r\n\t}\r\n\r\n\t// \"Runs all SQL queries in the supplied string. No result rows are retrieved\".\r\n\texec(query, callback) {\r\n\t\ttry {\r\n\t\t\tthis.database.exec(query)\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, null)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, error)\r\n\t\t\t} else {\r\n\t\t\t\t// \"When no `callback` is provided and an error occurs,\r\n\t\t\t\t//  an \"error\" event will be emitted\".\r\n\t\t\t\tthis.emit('error', error)\r\n\t\t\t\t// throw error\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Returns `this` for method chaining.\r\n\t\treturn this\r\n\t}\r\n\r\n\t// \"Prepares the SQL statement and optionally binds the specified parameters\r\n\t//  and calls the callback when done. The function returns a Statement object.\"\r\n\tprepare(...args) {\r\n\t\tconst {\r\n\t\t\tquery,\r\n\t\t\tcallback,\r\n\t\t\tparameters\r\n\t\t} = getRunArguments(args)\r\n\r\n\t\tlet statement = {}\r\n\r\n\t\ttry {\r\n\t\t\tstatement = this.database.prepare(query, parameters)\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, null)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallCallbackAsynchronously(callback, error)\r\n\t\t\t} else {\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn statement\r\n\t}\r\n}\r\n\r\nconst nextTick = getNextTickFunction()\r\nfunction callCallbackAsynchronously(callback, error, result) {\r\n\tnextTick(() => callback(error, result))\r\n}\r\n\r\nfunction getEnvVars() {\r\n\tif (typeof process !== 'undefined') {\r\n\t\treturn process.env\r\n\t}\r\n}\r\n\r\nfunction getRunArguments(args) {\r\n\tconst query = args.shift()\r\n\tlet parameters\r\n\tlet callback\r\n\r\n\t// Sort out the arguments.\r\n\tif (args.length === 0) {\r\n\t\tparameters = []\r\n\t} else {\r\n\t\tif (typeof args[args.length - 1] === 'function') {\r\n\t\t\tcallback = args.pop()\r\n\t\t}\r\n\t\tparameters = args\r\n\t}\r\n\r\n\t// If parameters were passed as an object then convert them to an object.\r\n\tif (parameters.length === 1) {\r\n\t\tif (parameters[0] !== null && typeof parameters[0] === 'object') {\r\n\t\t\tparameters = parameters[0]\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tquery,\r\n\t\tparameters,\r\n\t\tcallback\r\n\t}\r\n}"],"mappings":"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"}