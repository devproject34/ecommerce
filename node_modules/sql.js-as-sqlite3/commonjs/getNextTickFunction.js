"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = getNextTickFunction;
// https://timnew.me/blog/2014/06/23/process-nexttick-implementation-in-browser/
function getNextTickFunction() {
  // In Node.js.
  if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {
    // Calls the `callback` via `process.nextTick(callback, error)` to emulate "asynchronous" behavior.
    // https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick#why-use-processnexttick
    return function (f) {
      process.nextTick(f);
    };
  }
  var canSetImmediate = typeof window !== 'undefined' && window.setImmediate;
  var canPost = typeof window !== 'undefined' && window.postMessage && window.addEventListener;
  if (canSetImmediate) {
    return function (f) {
      window.setImmediate(f);
    };
  }
  if (canPost) {
    var queue = [];
    window.addEventListener('message', function (ev) {
      var source = ev.source;
      if ((source === window || source === null) && ev.data === 'process-tick') {
        ev.stopPropagation();
        if (queue.length > 0) {
          var fn = queue.shift();
          fn();
        }
      }
    }, true);
    return function nextTick(fn) {
      queue.push(fn);
      window.postMessage('process-tick', '*');
    };
  }
  return function nextTick(fn) {
    setTimeout(fn, 0);
  };
}
//# sourceMappingURL=getNextTickFunction.js.map